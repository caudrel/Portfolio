@use './media-query' as media;

@mixin section {
    & {
        padding-top: 6rem;
        padding-bottom: 2rem; // Explicitly scoped to prevent behavior changes
    }
}

@mixin footer-height {
    & {
        height: 2rem; // Valeur par défaut pour petits écrans
    }
    @media (min-width: media.$from-small) {
        height: 3rem; // Hauteur pour les écrans moyens
    }

    @media (min-width: media.$from-large) {
        height: 4rem; // Hauteur pour les grands écrans
    }
}

@mixin main-height {
    & {
        min-height: calc(100vh - 2rem);
    }

    @media (min-width: media.$from-small) {
        min-height: calc(100vh - 3rem);
    }

    @media (min-width: media.$from-large) {
        min-height: calc(100vh - 4rem);
    }
}

@mixin frame {
    & {
        margin: 0 auto;
        padding-right: 0.5rem;
        padding-left: 0.5rem;
    }

    @media (min-width: media.$from-micro) {
        padding-right: 1rem;
        padding-left: 1rem;
    }

    @media (min-width: media.$from-tiny) {
        padding-right: 1.5rem;
        padding-left: 1.5rem;
    }

    @media (min-width: media.$from-small) {
        padding-right: 3rem;
        padding-left: 3rem;
    }

    @media (min-width: media.$from-medium) {
        padding-right: 3rem;
        padding-left: 3rem;
    }

    @media (min-width: media.$from-large) {
        padding-right: 6rem;
        padding-left: 6rem;
    }

    @media (min-width: media.$from-big) {
        padding-right: 10rem;
        padding-left: 10rem;
    }

    @media (min-width: media.$from-huge) {
        padding-right: 15rem;
        padding-left: 15rem;
    }

    @media (min-width: media.$from-colossal) {
        padding-right: 25rem;
        padding-left: 25rem;
    }
}
